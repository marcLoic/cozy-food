server:
  port: 1798
  compression:
    min-response-size: 2048
    enabled: true
  forward-headers-strategy: native
  servlet:
    context-path: /api

management:
  security:
    enable: false
  tracing:
    sampling:
      probability: 1.0
    enabled: true
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_ENDPOINT:http://localhost:9411/api/v2/spans}
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

  endpoint:
    health:
      probes:
        enabled: true
      show-details: always

  endpoints:
    web:
      exposure:
        include: "*"

  server:
    port: 1799
    base-path: /api

  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
    tags:
      application: ${spring.application.name}
      instance: ${spring.application.instance_id}

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: cozy
  config:
    import:
      - optional:configtree:/run/secrets/

  jpa:
    open-in-view: false
    show-sql: true

#  rabbitmq:
#    host: localhost
#    port: 5672
#    username: "guest"
#    password: "guest"

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${ISSUER_URI}
          jwk-set-uri: ${JWK_SET_URI}
          audiences:
            - ${AUTH0_AUDIENCE}

  cache:
    cache-names:
      - user-info
    caffeine:
      spec: maximumSize=${MAXIMUM_CACHE_SIZE:100},expireAfterAccess=${CACHE_EXPIRATION_AFTER_READ_IN_MINUTES:30}m

  profiles:
    active: ${ACTIVE_PROFILE:development}

  docker:
    compose:
      file: file:./local-dev/compose.yaml
      enabled: true
      profiles:
        active: development
      lifecycle-management: start_and_stop

  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration
      - org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

